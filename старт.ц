взяти визначення ./розбирач;

зовнішня дія read_file(path: памʼять<char>, path_size: size_t, out: адреса<памʼять<char>>): size_t;
зовнішня дія malloc(size: size_t): невідома_адреса;
зовнішня дія realloc(value: невідома_адреса, size: size_t): невідома_адреса;
зовнішня дія free(value: невідома_адреса);
зовнішня дія putchar(value: char): int;

дія порахувати_розмір_ю8сі(значення: памʼять<п8>): позитивне {
  змінна ціль п: позитивне = 0;
  поки значення[п] != 0 {
    п += 1;
  }
  вернути п;
}

дія система_виділити_сиру_памʼять(система: адреса<мавка::розбирач::Система>, розмір: позитивне): памʼять<п8> {
  вернути malloc(size_t(розмір)) як памʼять<п8>;
}

дія система_перевиділити_сиру_памʼять(система: адреса<мавка::розбирач::Система>, значення: памʼять<п8>, новий_розмір: позитивне): памʼять<п8> {
  вернути realloc(значення як невідома_адреса, size_t(новий_розмір)) як памʼять<п8>;
}

дія система_звільнити_сиру_памʼять(система: адреса<мавка::розбирач::Система>, значення: невідома_памʼять) {
  free(значення як невідома_адреса);
}

дія система_померти(система: адреса<мавка::розбирач::Система>, код: ціле) {

}

дія дописати_в_стандартний_вихід(система: адреса<мавка::розбирач::Система>, потік: адреса<мавка::розбирач::ВихіднийПотік>, розмір: позитивне, дані: памʼять<п8>): логічне {
  змінна ціль п: позитивне = 0;
  поки п < розмір {
    putchar(char(дані[п]));
    п += 1;
  }
  вернути так;
}

дія старт(кількість_аргументів: ц32, аргументи: памʼять<памʼять<п8>>): ц32 {
  ціль значення_ю8 = ю8 { пусто, 0 };
  значення_ю8.розмір = позитивне(read_file(аргументи[1] як памʼять<char>, size_t(порахувати_розмір_ю8сі(аргументи[1])), значення_ю8.дані::адреса як адреса<памʼять<char>>));

  ціль система = мавка::розбирач::Система {
    дані = пусто,
    виділити_сиру_памʼять = система_виділити_сиру_памʼять,
    перевиділити_сиру_памʼять = система_перевиділити_сиру_памʼять,
    звільнити_сиру_памʼять = система_звільнити_сиру_памʼять,
    померти = система_померти,
  };
  ціль потік_в_стандартний_вихід = мавка::розбирач::ВихіднийПотік {
    дані = пусто,
    дописати = дописати_в_стандартний_вихід
  };

  ціль слова = мавка::розбирач::Слова { 0, пусто };
  змінна ціль позиція_помилки_розбору_на_слова: позитивне = 0;
  якщо мавка::розбирач::розібрати_ю8_на_слова(система::адреса, значення_ю8, слова::адреса, позиція_помилки_розбору_на_слова::адреса) == ні {
    вернути 1;
  }
  мавка::розбирач::вивести_слова(система::адреса, потік_в_стандартний_вихід::адреса, слова);

  ціль гілки = мавка::розбирач::Гілки { 9, пусто };
  змінна ціль позиція_слова_помилки_розбору_на_гілки: позитивне = 0;
  якщо мавка::розбирач::розібрати_слова_на_гілки(система::адреса, слова, гілки::адреса, позиція_слова_помилки_розбору_на_гілки::адреса) == ні {
    вернути 1;
  }
  мавка::розбирач::вивести_гілки(система::адреса, потік_в_стандартний_вихід::адреса, гілки);

  вернути 0;
}