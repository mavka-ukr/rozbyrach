секція мавка {
  синонім ВидГілкиНіщо = 0;
  синонім ВидГілкиВизначити = 1;
  синонім ВидГілкиЗвернутись = 2;
  синонім ВидГілкиОтримати = 3;
  синонім ВидГілкиОтриматиЕлемент = 5;
  синонім ВидГілкиЗмінити = 6;
  синонім ВидГілкиЗмінитиЕлемент = 8;
  синонім ВидГілкиВиконати = 9;
  синонім ВидГілкиДія = 12;
  синонім ВидГілкиСтруктура = 13;
  синонім ВидГілкиЧисло = 18;
  синонім ВидГілкиТекст = 19;
  синонім ВидГілкиОперація = 21;
  синонім ВидГілкиЯкщо = 22;
  синонім ВидГілкиПоки = 23;
  синонім ВидГілкиВернути = 24;
  синонім ВидГілкиЗначенняЯкщо = 27;
  синонім ВидГілкиСамоОперація = 29;
  синонім ВидГілкиВзяти = 33;
  синонім ВидГілкиСпробувати = 34;
  синонім ВидГілкиВпасти = 35;
  синонім ВидГілкиДати = 36;
  синонім ВидГілкиМодуль = 37;
  синонім ВидГілкиСписок = 38;
  синонім ВидГілкиСловник = 39;
  синонім ВидГілкиСимвол = 40;
  синонім ВидГілкиПеребрати = 41;
  синонім ВидГілкиЦикл = 42;
  синонім ВидГілкиВизначитиЗзовні = 43;
  синонім ВидГілкиПеребратиДіапазон = 44;
  синонім ВидГілкиВічнийЦикл = 45;
  синонім ВидГілкиВидалити = 46;
  синонім ВидГілкиВидалитиВластивість = 47;
  синонім ВидГілкиВидалитиЕлемент = 48;
  синонім ВидГілкиЧекати = 49; // 49

  синонім ВидОпераціїМноження = 1;
  синонім ВидОпераціїДілення = 2;
  синонім ВидОпераціїМодуль = 3;
  синонім ВидОпераціїДодавання = 4;
  синонім ВидОпераціїВіднімання = 5;
  синонім ВидОпераціїЗсувВліво = 6;
  синонім ВидОпераціїЗсувВправо = 7;
  синонім ВидОпераціїЗсувВправоЗнаковий = 8;
  синонім ВидОпераціїМенше = 9;
  синонім ВидОпераціїБільше = 10;
  синонім ВидОпераціїМеншеРівне = 11;
  синонім ВидОпераціїБільшеРівне = 12;
  синонім ВидОпераціїРівне = 13;
  синонім ВидОпераціїНерівне = 14;
  синонім ВидОпераціїДІ = 15;
  синонім ВидОпераціїВАБО = 16;
  синонім ВидОпераціїДАБО = 17;
  синонім ВидОпераціїІ = 18;
  синонім ВидОпераціїАБО = 19;
  синонім ВидОпераціїДіленняНаціло = 20;
  синонім ВидОпераціїПіднесенняДоСтепеня = 21;
  синонім ВидОпераціїМістить = 22;
  синонім ВидОпераціїНеМістить = 23;
  синонім ВидОпераціїЄ = 24;
  синонім ВидОпераціїНеЄ = 25;

  синонім ВидСамоОпераціїЛогічнеНі = 1;
  синонім ВидСамоОпераціїДвійковеНі = 2;
  синонім ВидСамоОпераціїПлюс = 3;
  синонім ВидСамоОпераціїМінус = 4;

  структура Місцезнаходження;
  структура Гілка;
  структура СписокГілок;

  структура Ідентифікатор;
  структура Параметр;
  структура Аргумент;
  структура ЕлементДати;
  структура ЕлементВзяти;
  структура ЕлементСловника;

  структура ДаніГілкиВизначити;
  структура ДаніГілкиЗвернутись;
  структура ДаніГілкиОтримати;
  структура ДаніГілкиОтриматиЕлемент;
  структура ДаніГілкиЗмінити;
  структура ДаніГілкиЗмінитиЕлемент;
  структура ДаніГілкиВиконати;
  структура ДаніГілкиДія;
  структура ДаніГілкиСтруктура;
  структура ДаніГілкиЧисло;
  структура ДаніГілкиТекст;
  структура ДаніГілкиСимвол;
  структура ДаніГілкиОперація;
  структура ДаніГілкиЯкщо;
  структура ДаніГілкиПоки;
  структура ДаніГілкиПеребрати;
  структура ДаніГілкиЦикл;
  структура ДаніГілкиВічнийЦикл;
  структура ДаніГілкиВернути;
  структура ДаніГілкиЗначенняЯкщо;
  структура ДаніГілкиСамоОперація;
  структура ДаніГілкиВзяти;
  структура ДаніГілкиСпробувати;
  структура ДаніГілкиВпасти;
  структура ДаніГілкиДати;
  структура ДаніГілкиМодуль;
  структура ДаніГілкиСписок;
  структура ДаніГілкиСловник;
  структура ДаніГілкиВизначитиЗзовні;
  структура ДаніГілкиПеребратиДіапазон;
  структура ДаніГілкиВидалити;
  структура ДаніГілкиВидалитиВластивість;
  структура ДаніГілкиВидалитиЕлемент;
  структура ДаніГілкиЧекати;

  структура ТекстКоду;
  структура ПомилкаРозборуМавки;
  структура РезультатРозборуМавки;
  
  структура можливо<Т> {
    заповнено: позитивне;
    значення: Т;
  }

  структура Місцезнаходження {
    позиція_слова: позитивне;
  }

  структура СписокГілок {
    довжина: позитивне;
    елементи: памʼять<адреса<Гілка>>;
  }

  структура Ідентифікатор {
    позиція_слова: позитивне;
  }

  структура Тип {
    кількість_гілок: позитивне;
    гілки: памʼять<адреса<Гілка>>;
  }

  структура Параметр {
    ідентифікатор: Ідентифікатор;
    тип: можливо<Тип>;
    значення: адреса<Гілка>;
    місцезнаходження: Місцезнаходження;
  }

  структура Аргумент {
    ідентифікатор: можливо<Ідентифікатор>;
    значення: адреса<Гілка>;
    місцезнаходження: Місцезнаходження;
  }

  структура ЕлементДати {
    ідентифікатор: Ідентифікатор;
    ідентифікатор_як: можливо<Ідентифікатор>;
    місцезнаходження: Місцезнаходження;
  }

  структура ЕлементВзяти {
    ідентифікатор: Ідентифікатор;
    ідентифікатор_як: можливо<Ідентифікатор>;
    місцезнаходження: Місцезнаходження;
  }

  структура ЕлементСловника {
    ключ: адреса<Гілка>;
    значення: адреса<Гілка>;
    місцезнаходження: Місцезнаходження;
  }

  структура ДаніГілкиВизначити {
    ідентифікатор: Ідентифікатор;
    значення: адреса<Гілка>;
  }

  структура ДаніГілкиЗвернутись {
    ідентифікатор: Ідентифікатор;
  }

  структура ДаніГілкиОтримати {
    предмет: адреса<Гілка>;
    ідентифікатор: Ідентифікатор;
  }

  структура ДаніГілкиОтриматиЕлемент {
    предмет: адреса<Гілка>;
    ключ: адреса<Гілка>;
  }

  структура ДаніГілкиЗмінити {
    предмет: адреса<Гілка>;
    ідентифікатор: Ідентифікатор;
    значення: адреса<Гілка>;
  }

  структура ДаніГілкиЗмінитиЕлемент {
    предмет: адреса<Гілка>;
    позиція: адреса<Гілка>;
    значення: адреса<Гілка>;
  }

  структура ДаніГілкиВиконати {
    предмет: адреса<Гілка>;
    кількість_аргументів: позитивне;
    аргументи: памʼять<Аргумент>;
  }

  структура ДаніГілкиДія {
    тривала: позитивне;
    модифікатор: позитивне;
    структура_: адреса<Гілка>;
    ідентифікатор: можливо<Ідентифікатор>;
    кількість_параметрів: позитивне;
    параметри: памʼять<Параметр>;
    тип_результату: можливо<Тип>;
    тіло: СписокГілок;
  }

  структура ДаніГілкиСтруктура {
    ідентифікатор: можливо<Ідентифікатор>;
    предок: адреса<Гілка>;
    кількість_параметрів: позитивне;
    параметри: памʼять<Параметр>;
  }

  структура ДаніГілкиЧисло {
    позиція_слова: позитивне;
  }

  структура ДаніГілкиТекст {
    ідентифікатор: можливо<Ідентифікатор>;
    позиція_слова: позитивне;
  }

  структура ДаніГілкиСимвол {
    ідентифікатор: можливо<Ідентифікатор>;
    позиція_слова: позитивне;
  }

  структура ДаніГілкиОперація {
    ліво: адреса<Гілка>;
    операція: позитивне;
    право: адреса<Гілка>;
  }

  структура ДаніГілкиЯкщо {
    умова: адреса<Гілка>;
    тіло: СписокГілок;
    тіло_інакше: СписокГілок;
  }

  структура ДаніГілкиПоки {
    умова: адреса<Гілка>;
    тіло: СписокГілок;
  }

  структура ДаніГілкиПеребрати {
    предмет: адреса<Гілка>;
    ідентифікатор: можливо<Ідентифікатор>;
    тіло: СписокГілок;
  }

  структура ДаніГілкиЦикл {
    старт: СписокГілок;
    умова: адреса<Гілка>;
    тіло: СписокГілок;
    ітерація: СписокГілок;
  }

  структура ДаніГілкиВічнийЦикл {
    тіло: СписокГілок;
  }

  структура ДаніГілкиВернути {
    значення: адреса<Гілка>;
  }

  структура ДаніГілкиЗначенняЯкщо {
    умова: адреса<Гілка>;
    значення_так: адреса<Гілка>;
    значення_ні: адреса<Гілка>;
  }

  структура ДаніГілкиСамоОперація {
    операція: позитивне;
    предмет: адреса<Гілка>;
  }

  структура ДаніГілкиВзяти {
    тип: можливо<Ідентифікатор>;
    довжина_шляху: позитивне;
    шлях: памʼять<Ідентифікатор>;
    ідентифікатор_як: можливо<Ідентифікатор>;
    кількість_елементів: позитивне;
    елементи: памʼять<ЕлементВзяти>;
  }

  структура ДаніГілкиСпробувати {
    тіло: СписокГілок;
    ідентифікатор_зловити: можливо<Ідентифікатор>;
    тіло_зловити: СписокГілок;
  }

  структура ДаніГілкиВпасти {
    значення: адреса<Гілка>;
  }

  структура ДаніГілкиДати {
    кількість_елементів: позитивне;
    елементи: памʼять<ЕлементДати>;
  }

  структура ДаніГілкиМодуль {
    ідентифікатор: можливо<Ідентифікатор>;
    тіло: СписокГілок;
  }

  структура ДаніГілкиСписок {
    кількість_елементів: позитивне;
    елементи: памʼять<адреса<Гілка>>;
  }

  структура ДаніГілкиСловник {
    кількість_елементів: позитивне;
    елементи: памʼять<ЕлементСловника>;
  }

  структура ДаніГілкиВизначитиЗзовні {
    ідентифікатор: Ідентифікатор;
    значення: адреса<Гілка>;
  }

  структура ДаніГілкиПеребратиДіапазон {
    від: адреса<Гілка>;
    включно: позитивне;
    до: адреса<Гілка>;
    ідентифікатор: можливо<Ідентифікатор>;
    тіло: СписокГілок;
  }

  структура ДаніГілкиВидалити {
    ідентифікатор: Ідентифікатор;
  }

  структура ДаніГілкиВидалитиВластивість {
    предмет: адреса<Гілка>;
    ідентифікатор: Ідентифікатор;
  }

  структура ДаніГілкиВидалитиЕлемент {
    предмет: адреса<Гілка>;
    позиція: адреса<Гілка>;
  }

  структура ДаніГілкиЧекати {
    значення: адреса<Гілка>;
  }

  структура Гілка {
    вид: позитивне;
    дані: ДаніГілкиВизначити | ДаніГілкиЗвернутись | ДаніГілкиОтримати | ДаніГілкиОтриматиЕлемент | ДаніГілкиЗмінити | ДаніГілкиЗмінитиЕлемент | ДаніГілкиВиконати | ДаніГілкиДія | ДаніГілкиСтруктура | ДаніГілкиЧисло | ДаніГілкиТекст | ДаніГілкиСимвол | ДаніГілкиОперація | ДаніГілкиЯкщо | ДаніГілкиПоки | ДаніГілкиПеребрати | ДаніГілкиЦикл | ДаніГілкиВічнийЦикл | ДаніГілкиВернути | ДаніГілкиЗначенняЯкщо | ДаніГілкиСамоОперація | ДаніГілкиВзяти | ДаніГілкиСпробувати | ДаніГілкиВпасти | ДаніГілкиДати | ДаніГілкиМодуль | ДаніГілкиСписок | ДаніГілкиСловник | ДаніГілкиВизначитиЗзовні | ДаніГілкиПеребратиДіапазон | ДаніГілкиВидалити | ДаніГілкиВидалитиВластивість | ДаніГілкиВидалитиЕлемент | ДаніГілкиЧекати;
    місцезнаходження: Місцезнаходження;
  }

  структура ТекстКоду {
    шлях: ю8;
    значення: ю8;
  }

  структура ПомилкаРозборуМавки {
    місцезнаходження: Місцезнаходження;
    повідомлення: ю8;
  }

  структура РезультатРозборуМавки {
    успіх: позитивне;
    тіло: СписокГілок;
    помилка: адреса<ПомилкаРозборуМавки>;
  }

  структура РезультатРозборуТекстуМавки {
    успіх: позитивне;
    значення: адреса<Гілка>;
    помилка: адреса<ПомилкаРозборуМавки>;
  }
}

зовнішня дія розібрати_мавку(текст_коду: адреса<мавка::ТекстКоду>): адреса<мавка::РезультатРозборуМавки>;
зовнішня дія звільнити_результат_розбору_мавки(результат_розбору_мавки: адреса<мавка::РезультатРозборуМавки>);
зовнішня дія розібрати_текст_мавки(текст_коду: адреса<мавка::ТекстКоду>, ідентифікатор: адреса<мавка::Ідентифікатор>, значення: ю8, рядок: позитивне, стовпець: позитивне): адреса<мавка::РезультатРозборуТекстуМавки>;
